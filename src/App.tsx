import React, { useState } from 'react';
import MusicInstructor from './piano';
import { SessionSummary, SessionSummaryType } from './SessionSummary';
import { LandingPage } from './LandingPage';
import { AvatarProvider } from './AvatarContext';

type AppPage = 'landing' | 'piano' | 'summary';

const AppContent: React.FC = () => {
  const [currentPage, setCurrentPage] = useState<AppPage>('landing');
  const [sessionData, setSessionData] = useState<SessionSummaryType | null>(null);

  // Mock session data - in a real app, this would come from the piano session
  const generateMockSessionData = (): SessionSummaryType => {
    return {
      duration: Math.floor(Math.random() * 1800) + 300, // 5-35 minutes
      accuracy: 0, // Not displayed anymore
      notesPlayed: 0, // Not displayed anymore
      mistakes: [], // Not displayed anymore
      conversationSummary: 'This is a mock session summary. In a real session, this would be generated by the AI based on the actual conversation during the lesson.',
      summaryAvatar: {
        id: 'mock',
        name: 'Mock Instructor',
        avatar_url: '',
        video_url: '',
        voice_id: '',
        personality: 'Helpful and encouraging.',
        quote: 'Great work on your lesson!'
      }
    };
  };

  const handleStartPlaying = () => {
    setCurrentPage('piano');
  };

  const handleEndSession = (sessionData: SessionSummaryType) => {
    setSessionData(sessionData);
    setCurrentPage('summary');
  };

  const handleBackToHome = () => {
    setCurrentPage('landing');
    setSessionData(null);
  };

  const handleNewSession = () => {
    setCurrentPage('piano');
    setSessionData(null);
  };

  if (currentPage === 'landing') {
    return (
      <LandingPage onStartPlaying={handleStartPlaying} />
    );
  }


  if (currentPage === 'summary' && sessionData) {
    return (
      <SessionSummary
        summary={sessionData}
        onBackToHome={handleBackToHome}
        onNewSession={handleNewSession}
      />
    );
  }

  return (
    <MusicInstructor onEndSession={handleEndSession} />
  );
};

const App: React.FC = () => {
  return (
    <AvatarProvider>
      <AppContent />
    </AvatarProvider>
  );
};

export default App;
